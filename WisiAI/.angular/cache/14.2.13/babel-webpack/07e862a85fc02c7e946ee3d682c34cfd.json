{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SettingsnavbarComponent } from \"../../settingsnavbar/settingsnavbar.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let ModelComponent = /*#__PURE__*/(() => {\n  class ModelComponent {\n    constructor() {\n      this.instructions = '';\n      this.selectedModel = 'gpt3.5';\n      this.selectedTemperature = 5;\n    }\n\n    onFormSubmit() {\n      // Puoi inserire qui la logica per salvare i dati come desiderato\n      console.log('Istruzioni:', this.instructions);\n      console.log('Modello selezionato:', this.selectedModel);\n      console.log('Temperatura selezionata:', this.selectedTemperature); // Aggiungi la logica di salvataggio qui...\n    }\n\n  }\n\n  ModelComponent.ɵfac = function ModelComponent_Factory(t) {\n    return new (t || ModelComponent)();\n  };\n\n  ModelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModelComponent,\n    selectors: [[\"app-model\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 27,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"mt-4\", \"col-6\", \"m-5\", 3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"instructions\", 1, \"form-label\"], [\"id\", \"instructions\", \"rows\", \"4\", \"placeholder\", \"The instructions allows you to customize your chatbot's personality and style. Please make sure to experiment with the instructions by making it very specific to your data and use case.\", 1, \"form-control\"], [\"for\", \"model\", 1, \"form-label\"], [\"id\", \"model\", \"name\", \"selectedModel\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"gpt3.5\"], [\"value\", \"gpt3.5-turbo\"], [\"value\", \"gpt4\"], [\"for\", \"temperature\", 1, \"form-label\"], [\"type\", \"range\", \"id\", \"temperature\", \"min\", \"1\", \"max\", \"10\", \"name\", \"selectedTemperature\", 1, \"form-range\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function ModelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-settingsnavbar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ModelComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onFormSubmit();\n        });\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Modello\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Instructions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"textarea\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Modello\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ModelComponent_Template_select_ngModelChange_12_listener($event) {\n          return ctx.selectedModel = $event;\n        });\n        i0.ɵɵelementStart(13, \"option\", 7);\n        i0.ɵɵtext(14, \"GPT 3.5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 8);\n        i0.ɵɵtext(16, \"GPT 3.5 Turbo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 9);\n        i0.ɵɵtext(18, \"GPT 4\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Temperatura\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ModelComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.selectedTemperature = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"label\", 10);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"button\", 12);\n        i0.ɵɵtext(26, \"Salva\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedModel);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedTemperature);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Selected Temperature: \", ctx.selectedTemperature, \"\");\n      }\n    },\n    dependencies: [CommonModule, FormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.RangeValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm, SettingsnavbarComponent],\n    styles: [\"[_nghost-%COMP%]{display:block}\"],\n    changeDetection: 0\n  });\n  return ModelComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}