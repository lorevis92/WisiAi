{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { SourcesNavbarComponent } from \"../sourcesNavbar/sourcesNavbar.component\";\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction FilesourceComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function FilesourceComponent_li_15_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeFile(i_r2));\n    });\n    i0.ɵɵtext(3, \"Rimuovi\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const file_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", file_r1.name, \" \");\n  }\n}\n\nexport let FilesourceComponent = /*#__PURE__*/(() => {\n  class FilesourceComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.files = [];\n      this.fileForm = this.fb.group({\n        file: [null, Validators.required]\n      });\n    }\n\n    onFileChange(event) {\n      const files = event.target.files;\n\n      for (let i = 0; i < files.length; i++) {\n        const file = files.item(i);\n\n        if (file) {\n          this.files.push(file);\n        }\n      }\n    }\n\n    removeFile(index) {\n      this.files.splice(index, 1);\n    }\n\n    onSubmit() {\n      // Handle the file submission logic here\n      console.log('Files submitted:', this.files); // You can implement file upload logic or send them to an API\n      // Reset the form and files array after submission\n\n      this.fileForm.reset();\n      this.files = [];\n    }\n\n  }\n\n  FilesourceComponent.ɵfac = function FilesourceComponent_Factory(t) {\n    return new (t || FilesourceComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  FilesourceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilesourceComponent,\n    selectors: [[\"app-filesource\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"fileInput\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"fileInput\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"mt-4\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-sm\", \"float-end\", 3, \"click\"]],\n    template: function FilesourceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-sources-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"h1\");\n        i0.ɵɵtext(3, \"File Source Component\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function FilesourceComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Carica un nuovo file:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function FilesourceComponent_Template_input_change_8_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵtext(10, \"Carica\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"h4\");\n        i0.ɵɵtext(13, \"Files Caricati:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ul\", 7);\n        i0.ɵɵtemplate(15, FilesourceComponent_li_15_Template, 4, 1, \"li\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.fileForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.files);\n      }\n    },\n    dependencies: [CommonModule, i2.NgForOf, SourcesNavbarComponent, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n    styles: [\"[_nghost-%COMP%]{display:block}\"],\n    changeDetection: 0\n  });\n  return FilesourceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}