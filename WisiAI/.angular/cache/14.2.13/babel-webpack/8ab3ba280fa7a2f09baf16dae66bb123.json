{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/assistant.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"messageContainer\"];\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"user-message\": a0,\n    \"assistant-message\": a1\n  };\n};\n\nfunction InterfacciaChatComponent_div_0_div_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c1, message_r5.isUser, !message_r5.isUser));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r5.text, \" \");\n  }\n}\n\nconst _c2 = function (a0, a1) {\n  return {\n    \"background-color\": a0,\n    \"color\": a1\n  };\n};\n\nfunction InterfacciaChatComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6);\n    i0.ɵɵelement(2, \"img\", 7);\n    i0.ɵɵelementStart(3, \"div\")(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 8, 9)(10, \"div\", 10);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, InterfacciaChatComponent_div_0_div_1_div_12_Template, 2, 5, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 12)(14, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function InterfacciaChatComponent_div_0_div_1_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.userMessage = $event);\n    })(\"keyup.enter\", function InterfacciaChatComponent_div_0_div_1_Template_input_keyup_enter_14_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.sendUserMessage());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function InterfacciaChatComponent_div_0_div_1_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.sendUserMessage());\n    });\n    i0.ɵɵtext(16, \"Send\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(9, _c2, ctx_r2.assistant.assistantBackgroundColor, ctx_r2.assistant.assistantTextColor));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r2.assistant.assistantImage, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", ctx_r2.assistant.assistantName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.assistant.assistantName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.assistant.assistantSubtitle);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.assistant.messaggioIniziale, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.messages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.userMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(12, _c2, ctx_r2.assistant.assistantBackgroundColor, ctx_r2.assistant.assistantTextColor));\n  }\n}\n\nfunction InterfacciaChatComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, InterfacciaChatComponent_div_0_div_1_Template, 17, 15, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function InterfacciaChatComponent_div_0_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.changeChatVisibility());\n    });\n    i0.ɵɵelementStart(3, \"span\", 4);\n    i0.ɵɵtext(4, \" forum \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.chatVisible);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(2, _c2, ctx_r0.assistant.assistantBackgroundColor, ctx_r0.assistant.assistantTextColor));\n  }\n}\n\nexport class InterfacciaChatComponent {\n  constructor(assistantService, cdr, elRef) {\n    this.assistantService = assistantService;\n    this.cdr = cdr;\n    this.elRef = elRef;\n    this.messages = [];\n    this.userMessage = '';\n    this.chatVisible = true;\n    this.assistant = {\n      assistantName: '',\n      assistantImage: '',\n      assistantSubtitle: '',\n      assistantBackgroundColor: '',\n      assistantTextColor: '',\n      messaggioIniziale: '',\n      instructions: '',\n      selectedModel: '',\n      selectedTemperature: 0\n    };\n    this.assistantId = '';\n  }\n\n  ngOnInit() {\n    const assistantId = '7f62a36d-550e-42bd-bda2-2c42804d711e'; // ID dell'assistente desiderato\n\n    this.assistantService.getAssistantById(assistantId).subscribe(response => {\n      this.assistant = response;\n      console.log(this.assistant);\n    }, error => {\n      console.error('Errore durante il recupero dei dati dell\\'assistente:', error);\n    });\n    this.positionComponent(); // Posiziona il componente quando viene inizializzato\n  }\n\n  changeChatVisibility() {\n    this.chatVisible = !this.chatVisible;\n  }\n\n  onWindowResize() {\n    this.positionComponent(); // Ricalcola la posizione del componente quando la finestra viene ridimensionata\n  }\n\n  positionComponent() {\n    const component = this.elRef.nativeElement;\n    component.style.position = 'fixed'; // Utilizza 'fixed' per posizionarlo rispetto allo schermo\n\n    component.style.bottom = '0';\n    component.style.right = '0';\n    component.style.paddingRight = '20px'; // Aggiungi del padding destro\n\n    component.style.paddingBottom = '20px';\n  }\n\n  sendUserMessage() {\n    if (this.userMessage.trim() !== '') {\n      this.messages.push({\n        text: this.userMessage,\n        isUser: true\n      }); // Simuliamo una risposta automatica dell'assistente\n\n      this.messages.push({\n        text: 'Risposta automatica...',\n        isUser: false\n      });\n      this.userMessage = ''; // Resetta l'input dell'utente\n\n      this.cdr.detectChanges();\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n  }\n\n}\n\nInterfacciaChatComponent.ɵfac = function InterfacciaChatComponent_Factory(t) {\n  return new (t || InterfacciaChatComponent)(i0.ɵɵdirectiveInject(i1.AssistantService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nInterfacciaChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InterfacciaChatComponent,\n  selectors: [[\"app-interfaccia-chat\"]],\n  viewQuery: function InterfacciaChatComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageContainer = _t.first);\n    }\n  },\n  hostBindings: function InterfacciaChatComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function InterfacciaChatComponent_resize_HostBindingHandler() {\n        return ctx.onWindowResize();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    assistantId: \"assistantId\"\n  },\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 3,\n  consts: [[\"class\", \"chat-bubble-container\", 4, \"ngIf\"], [1, \"chat-bubble-container\"], [\"class\", \"chat-container\", 4, \"ngIf\"], [1, \"bubble-container\", 3, \"ngStyle\", \"click\"], [1, \"material-symbols-outlined\"], [1, \"chat-container\"], [1, \"assistant-info\", 3, \"ngStyle\"], [3, \"src\", \"alt\"], [1, \"message-container\"], [\"messageContainer\", \"\"], [1, \"assistant-message\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"user-input\"], [\"placeholder\", \"Type your message...\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"ngStyle\", \"click\"], [3, \"ngClass\"]],\n  template: function InterfacciaChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, InterfacciaChatComponent_div_0_Template, 5, 5, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx.assistant$));\n    }\n  },\n  dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgStyle, i2.AsyncPipe, FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, HttpClientModule],\n  styles: [\"[_nghost-%COMP%] {\\n  display: block; \\n}\\n\\n\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  width: 400px;\\n  border: 1px solid #ccc;\\n  height: 520px; \\n  border-radius: 8px;\\n  position: relative;\\n}\\n\\n\\n\\n.assistant-info[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  padding-bottom: 0px;\\n  background-color: #2a97cf;\\n  top: 0;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.assistant-info[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  margin-bottom: 10px;\\n  margin-right: 10px;\\n  object-fit: cover;\\n}\\n\\n\\n\\n.message-container[_ngcontent-%COMP%] {\\n  overflow-y: auto;\\n  background-color: #fff;\\n}\\n\\n.user-message[_ngcontent-%COMP%], .assistant-message[_ngcontent-%COMP%] {\\n  background-color: #f5f5f5;\\n  padding: 10px;\\n  border-radius: 8px;\\n  max-width: 90%; \\n  margin-top: 10px;\\n  height: auto;\\n  overflow-wrap: break-word;\\n  margin-left: 10px;\\n}\\n\\n.user-message[_ngcontent-%COMP%] {\\n  background-color: #e0f7fa;\\n  margin-left: auto;\\n  margin-right: 10px;\\n}\\n\\n\\n\\n.user-input[_ngcontent-%COMP%] {\\n  background-color: #fff;\\n  display: flex;\\n  margin-left: 10px;\\n  margin-top: auto;\\n  margin-bottom: 10px;\\n  padding-top: 10px;\\n  height: auto;\\n  overflow-wrap: break-word;\\n}\\n\\n.chat-container.user-input-below-last-message[_ngcontent-%COMP%]   .user-input[_ngcontent-%COMP%] {\\n  margin-top: auto;\\n}\\n\\n.user-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border-radius: 8px;\\n  border: 1px solid #ccc;\\n  width: 300px;\\n}\\n\\n.user-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:hover {\\n  border-color: #aaa; \\n}\\n\\n.user-input[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 75px;\\n  margin-left: 5px;\\n  padding: 10px;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  background-color: #2a97cf;\\n  color: #fff;\\n  border: none;\\n}\\n\\n.bubble-container[_ngcontent-%COMP%]{\\n  padding: 10px;\\n  border-radius: 50%;\\n  width: 50px;\\n  height: 50px;\\n  border-right: auto;\\n  margin-top: 20px;\\n  margin-left: auto;\\n}\\n\\n.bubble-container[_ngcontent-%COMP%]:hover{\\n  cursor: pointer;\\n}\\n\\n.bubble-container[_ngcontent-%COMP%]   .material-symbols-outlined[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVyZmFjY2lhQ2hhdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYyxFQUFFLHlFQUF5RTtBQUMzRjs7QUFFQSxnQ0FBZ0M7O0FBQ2hDO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osc0JBQXNCO0VBQ3RCLGFBQWEsRUFBRSxrQkFBa0I7RUFDakMsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjs7QUFFQSw4Q0FBOEM7O0FBQzlDO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsTUFBTTtFQUNOLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQSwwQ0FBMEM7O0FBQzFDO0VBQ0UsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSx5QkFBeUI7RUFDekIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixjQUFjLEVBQUUsc0NBQXNDO0VBQ3RELGdCQUFnQjtFQUNoQixZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLGlCQUFpQjtBQUNuQjs7QUFHQTtFQUNFLHlCQUF5QjtFQUN6QixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBLGtDQUFrQzs7QUFDbEM7RUFDRSxzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1oseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixzQkFBc0I7RUFDdEIsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCLEVBQUUsNkRBQTZEO0FBQ25GOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsWUFBWTtBQUNkIiwiZmlsZSI6ImludGVyZmFjY2lhQ2hhdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jazsgLyogUG9zaXppb25lIHJlbGF0aXZhIHBlciBwb3NpemlvbmFyZSBpIGZpZ2xpIGluIGJhc2UgYSBxdWVzdG8gZWxlbWVudG8gKi9cbn1cblxuLyogU3RpbGkgcGVyIGxhIGNoYXQgY29udGFpbmVyICovXG4uY2hhdC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogNDAwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGhlaWdodDogNTIwcHg7IC8qIEFsdGV6emEgZmlzc2EgKi9cbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi8qIFN0aWxpIHBlciBsZSBpbmZvcm1hemlvbmkgZGVsbCdhc3Npc3RlbnRlICovXG4uYXNzaXN0YW50LWluZm8ge1xuICBwYWRkaW5nOiAxMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE5N2NmO1xuICB0b3A6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5hc3Npc3RhbnQtaW5mbyBpbWcge1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi8qIFN0aWxpIHBlciBpbCBjb250ZW5pdG9yZSBkZWkgbWVzc2FnZ2kgKi9cbi5tZXNzYWdlLWNvbnRhaW5lciB7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbi51c2VyLW1lc3NhZ2UsXG4uYXNzaXN0YW50LW1lc3NhZ2Uge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG1heC13aWR0aDogOTAlOyAvKiBMaW1pdGEgbGEgbGFyZ2hlenphIGRlbCBtZXNzYWdnaW8gKi9cbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgaGVpZ2h0OiBhdXRvO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuXG4udXNlci1tZXNzYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZjdmYTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLyogU3RpbGkgcGVyIGwnaW5wdXQgZGVsbCd1dGVudGUgKi9cbi51c2VyLWlucHV0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi10b3A6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG59XG5cbi5jaGF0LWNvbnRhaW5lci51c2VyLWlucHV0LWJlbG93LWxhc3QtbWVzc2FnZSAudXNlci1pbnB1dCB7XG4gIG1hcmdpbi10b3A6IGF1dG87XG59XG5cbi51c2VyLWlucHV0IGlucHV0IHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICB3aWR0aDogMzAwcHg7XG59XG5cbi51c2VyLWlucHV0IGlucHV0OmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjYWFhOyAvKiBJbXBvc3RhIGlsIGNvbG9yZSBkZWwgYm9yZG8gcXVhbmRvIGwnaW5wdXQgw6ggc2VsZXppb25hdG8gKi9cbn1cblxuLnVzZXItaW5wdXQgYnV0dG9uIHtcbiAgd2lkdGg6IDc1cHg7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmE5N2NmO1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4uYnViYmxlLWNvbnRhaW5lcntcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXItcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xufVxuXG4uYnViYmxlLWNvbnRhaW5lcjpob3ZlcntcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYnViYmxlLWNvbnRhaW5lciAubWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufSJdfQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"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","names":["CommonModule","ChangeDetectorRef","ElementRef","FormsModule","HttpClientModule","i0","InterfacciaChatComponent","constructor","assistantService","cdr","elRef","assistantName","assistantImage","assistantSubtitle","assistantBackgroundColor","assistantTextColor","messaggioIniziale","instructions","selectedModel","selectedTemperature","ngOnInit","assistantId","getAssistantById","subscribe","response","assistant","console","log","error","positionComponent","changeChatVisibility","chatVisible","onWindowResize","component","nativeElement","style","position","bottom","right","paddingRight","paddingBottom","sendUserMessage","userMessage","trim","messages","push","text","isUser","detectChanges","scrollToBottom","messageContainer","scrollTop","scrollHeight","selectors","viewQuery","ctx","i2","i3","styles","changeDetection"],"sourceRoot":"","sources":["C:\\Users\\Lucetta\\Desktop\\Progetti Angular\\WisiAI\\src\\app\\components\\sources\\components\\interfacciaChat\\interfacciaChat.component.ts","C:\\Users\\Lucetta\\Desktop\\Progetti Angular\\WisiAI\\src\\app\\components\\sources\\components\\interfacciaChat\\interfacciaChat.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AssistantService } from 'src/app/services/assistant.service';\nimport { Assistant } from 'src/app/models/assistant';\nimport { HttpClientModule } from '@angular/common/http';\n\ninterface Message {\n  text: string;\n  isUser: boolean;\n}\n\n@Component({\n  selector: 'app-interfaccia-chat',\n  standalone: true,\n  templateUrl: './interfacciaChat.component.html',\n  styleUrls: ['./interfacciaChat.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n})\n\nexport class InterfacciaChatComponent implements OnInit{\n  messages: Message[] = [];\n  userMessage: string = '';\n  chatVisible: boolean = true;\n  assistant: Assistant = {\n    assistantName: '',\n    assistantImage: '',\n    assistantSubtitle: '',\n    assistantBackgroundColor: '',\n    assistantTextColor: '',\n    messaggioIniziale: '',\n    instructions: '',\n    selectedModel: '',\n    selectedTemperature: 0\n  };\n\n\n  @Input() assistantId: string ='';\n\n  @ViewChild('messageContainer') messageContainer!: ElementRef;\n\n  constructor(private assistantService: AssistantService, private cdr: ChangeDetectorRef, private elRef: ElementRef) {}\n\n  ngOnInit(): void {\n    const assistantId = '7f62a36d-550e-42bd-bda2-2c42804d711e'; // ID dell'assistente desiderato\n        this.assistantService.getAssistantById(assistantId).subscribe(\n          (response) => {\n            this.assistant = response;\n            console.log(this.assistant);\n          },\n          (error) => {\n            console.error('Errore durante il recupero dei dati dell\\'assistente:', error);\n          }\n        );\n    this.positionComponent(); // Posiziona il componente quando viene inizializzato\n  }\n\n  changeChatVisibility() {\n    this.chatVisible = !this.chatVisible;\n  }\n\n  @HostListener('window:resize')\n  onWindowResize() {\n    this.positionComponent(); // Ricalcola la posizione del componente quando la finestra viene ridimensionata\n  }\n\n  positionComponent() {\n    const component = this.elRef.nativeElement;\n    component.style.position = 'fixed'; // Utilizza 'fixed' per posizionarlo rispetto allo schermo\n    component.style.bottom = '0';\n    component.style.right = '0';\n    component.style.paddingRight = '20px'; // Aggiungi del padding destro\n    component.style.paddingBottom = '20px';\n}\n\n\n  sendUserMessage() {\n    if (this.userMessage.trim() !== '') {\n      this.messages.push({ text: this.userMessage, isUser: true });\n      // Simuliamo una risposta automatica dell'assistente\n      this.messages.push({ text: 'Risposta automatica...', isUser: false });\n      this.userMessage = ''; // Resetta l'input dell'utente\n      this.cdr.detectChanges();\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    this.messageContainer.nativeElement.scrollTop = this.messageContainer.nativeElement.scrollHeight;\n  }\n\n}\n","<div class=\"chat-bubble-container\" *ngIf=\"assistant$ | async as assistantData\">\r\n  <div class=\"chat-container\" *ngIf=\"chatVisible\">\r\n    <div class=\"assistant-info\" [ngStyle]=\"{'background-color': assistant.assistantBackgroundColor, 'color': assistant.assistantTextColor}\">\r\n      <img src={{assistant.assistantImage}} alt=\"{{ assistant.assistantName }}\" />\r\n      <div>\r\n        <h4>{{ assistant.assistantName }}</h4>\r\n        <p>{{ assistant.assistantSubtitle }}</p>\r\n      </div>\r\n    </div>\r\n    \r\n      <div class=\"message-container\" #messageContainer>\r\n        <div class=\"assistant-message\">\r\n          {{assistant.messaggioIniziale}}\r\n        </div>\r\n        <div [ngClass]=\"{ 'user-message': message.isUser, 'assistant-message': !message.isUser }\" *ngFor=\"let message of messages\">\r\n          {{ message.text }}\r\n        </div>\r\n      </div>\r\n    \r\n      <div class=\"user-input\">\r\n        <input [(ngModel)]=\"userMessage\" placeholder=\"Type your message...\" (keyup.enter)=\"sendUserMessage()\" />\r\n        <button (click)=\"sendUserMessage()\" [ngStyle]=\"{'background-color': assistant.assistantBackgroundColor, 'color': assistant.assistantTextColor}\">Send</button>\r\n      </div>\r\n  </div>\r\n  <div class=\"bubble-container\" (click)=\"changeChatVisibility()\" [ngStyle]=\"{'background-color': assistant.assistantBackgroundColor, 'color': assistant.assistantTextColor}\">\r\n    <span class=\"material-symbols-outlined\">\r\n      forum\r\n    </span>\r\n  </div>\r\n</div>\r\n\r\n  "]},"metadata":{},"sourceType":"module"}